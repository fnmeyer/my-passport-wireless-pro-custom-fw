--- linux-kernel.orig/fs/notify/inode_mark.c	2016-02-26 14:09:47.912102013 +0800
+++ linux-kernel.mod/fs/notify/inode_mark.c	2016-03-04 20:12:53.280805489 +0800
@@ -288,14 +288,18 @@
 		spin_unlock(&inode->i_lock);
 
 		/* In case the dropping of a reference would nuke next_i. */
-		if ((&next_i->i_sb_list != list) &&
-		    atomic_read(&next_i->i_count)) {
+		while (&next_i->i_sb_list != list) {
 			spin_lock(&next_i->i_lock);
-			if (!(next_i->i_state & (I_FREEING | I_WILL_FREE))) {
+
+			if (!(next_i->i_state & (I_FREEING | I_WILL_FREE)) && 
+				atomic_read(&next_i->i_count)) {
 				__iget(next_i);
 				need_iput = next_i;
+				spin_unlock(&next_i->i_lock);
+				break;
 			}
 			spin_unlock(&next_i->i_lock);
+			next_i = list_entry(next_i->i_sb_list.next, struct inode, i_sb_list); 
 		}
 
 		/*
